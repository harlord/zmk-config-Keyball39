/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_ZMK_CORE_PROTO_ZMK_CORE_PB_H_INCLUDED
#define PB_ZMK_CORE_PROTO_ZMK_CORE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _zmk_core_LockState {
    zmk_core_LockState_ZMK_STUDIO_CORE_LOCK_STATE_LOCKED = 0,
    zmk_core_LockState_ZMK_STUDIO_CORE_LOCK_STATE_UNLOCKED = 1
} zmk_core_LockState;

/* Struct definitions */
typedef struct _zmk_core_Request {
    pb_size_t which_request_type;
    union {
        bool get_device_info;
        bool get_lock_state;
        bool lock;
        bool reset_settings;
    } request_type;
} zmk_core_Request;

typedef struct _zmk_core_GetDeviceInfoResponse {
    pb_callback_t name;
    pb_callback_t serial_number;
} zmk_core_GetDeviceInfoResponse;

typedef struct _zmk_core_Response {
    pb_size_t which_response_type;
    union {
        zmk_core_GetDeviceInfoResponse get_device_info;
        zmk_core_LockState get_lock_state;
        bool reset_settings;
    } response_type;
} zmk_core_Response;

typedef struct _zmk_core_Notification {
    pb_size_t which_notification_type;
    union {
        zmk_core_LockState lock_state_changed;
    } notification_type;
} zmk_core_Notification;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _zmk_core_LockState_MIN zmk_core_LockState_ZMK_STUDIO_CORE_LOCK_STATE_LOCKED
#define _zmk_core_LockState_MAX zmk_core_LockState_ZMK_STUDIO_CORE_LOCK_STATE_UNLOCKED
#define _zmk_core_LockState_ARRAYSIZE ((zmk_core_LockState)(zmk_core_LockState_ZMK_STUDIO_CORE_LOCK_STATE_UNLOCKED+1))


#define zmk_core_Response_response_type_get_lock_state_ENUMTYPE zmk_core_LockState


#define zmk_core_Notification_notification_type_lock_state_changed_ENUMTYPE zmk_core_LockState


/* Initializer values for message structs */
#define zmk_core_Request_init_default            {0, {0}}
#define zmk_core_Response_init_default           {0, {zmk_core_GetDeviceInfoResponse_init_default}}
#define zmk_core_GetDeviceInfoResponse_init_default {{{NULL}, NULL}, {{NULL}, NULL}}
#define zmk_core_Notification_init_default       {0, {_zmk_core_LockState_MIN}}
#define zmk_core_Request_init_zero               {0, {0}}
#define zmk_core_Response_init_zero              {0, {zmk_core_GetDeviceInfoResponse_init_zero}}
#define zmk_core_GetDeviceInfoResponse_init_zero {{{NULL}, NULL}, {{NULL}, NULL}}
#define zmk_core_Notification_init_zero          {0, {_zmk_core_LockState_MIN}}

/* Field tags (for use in manual encoding/decoding) */
#define zmk_core_Request_get_device_info_tag     1
#define zmk_core_Request_get_lock_state_tag      2
#define zmk_core_Request_lock_tag                3
#define zmk_core_Request_reset_settings_tag      4
#define zmk_core_GetDeviceInfoResponse_name_tag  1
#define zmk_core_GetDeviceInfoResponse_serial_number_tag 2
#define zmk_core_Response_get_device_info_tag    1
#define zmk_core_Response_get_lock_state_tag     2
#define zmk_core_Response_reset_settings_tag     4
#define zmk_core_Notification_lock_state_changed_tag 1

/* Struct field encoding specification for nanopb */
#define zmk_core_Request_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    BOOL,     (request_type,get_device_info,request_type.get_device_info),   1) \
X(a, STATIC,   ONEOF,    BOOL,     (request_type,get_lock_state,request_type.get_lock_state),   2) \
X(a, STATIC,   ONEOF,    BOOL,     (request_type,lock,request_type.lock),   3) \
X(a, STATIC,   ONEOF,    BOOL,     (request_type,reset_settings,request_type.reset_settings),   4)
#define zmk_core_Request_CALLBACK NULL
#define zmk_core_Request_DEFAULT NULL

#define zmk_core_Response_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (response_type,get_device_info,response_type.get_device_info),   1) \
X(a, STATIC,   ONEOF,    UENUM,    (response_type,get_lock_state,response_type.get_lock_state),   2) \
X(a, STATIC,   ONEOF,    BOOL,     (response_type,reset_settings,response_type.reset_settings),   4)
#define zmk_core_Response_CALLBACK NULL
#define zmk_core_Response_DEFAULT NULL
#define zmk_core_Response_response_type_get_device_info_MSGTYPE zmk_core_GetDeviceInfoResponse

#define zmk_core_GetDeviceInfoResponse_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, BYTES,    serial_number,     2)
#define zmk_core_GetDeviceInfoResponse_CALLBACK pb_default_field_callback
#define zmk_core_GetDeviceInfoResponse_DEFAULT NULL

#define zmk_core_Notification_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    UENUM,    (notification_type,lock_state_changed,notification_type.lock_state_changed),   1)
#define zmk_core_Notification_CALLBACK NULL
#define zmk_core_Notification_DEFAULT NULL

extern const pb_msgdesc_t zmk_core_Request_msg;
extern const pb_msgdesc_t zmk_core_Response_msg;
extern const pb_msgdesc_t zmk_core_GetDeviceInfoResponse_msg;
extern const pb_msgdesc_t zmk_core_Notification_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define zmk_core_Request_fields &zmk_core_Request_msg
#define zmk_core_Response_fields &zmk_core_Response_msg
#define zmk_core_GetDeviceInfoResponse_fields &zmk_core_GetDeviceInfoResponse_msg
#define zmk_core_Notification_fields &zmk_core_Notification_msg

/* Maximum encoded size of messages (where known) */
/* zmk_core_Response_size depends on runtime parameters */
/* zmk_core_GetDeviceInfoResponse_size depends on runtime parameters */
#define ZMK_CORE_PROTO_ZMK_CORE_PB_H_MAX_SIZE    zmk_core_Request_size
#define zmk_core_Notification_size               2
#define zmk_core_Request_size                    2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
