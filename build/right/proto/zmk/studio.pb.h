/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_ZMK_STUDIO_PROTO_ZMK_STUDIO_PB_H_INCLUDED
#define PB_ZMK_STUDIO_PROTO_ZMK_STUDIO_PB_H_INCLUDED
#include <pb.h>
#include "meta.pb.h"
#include "core.pb.h"
#include "behaviors.pb.h"
#include "keymap.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _zmk_studio_Request {
    uint32_t request_id;
    pb_size_t which_subsystem;
    union {
        zmk_core_Request core;
        zmk_behaviors_Request behaviors;
        zmk_keymap_Request keymap;
    } subsystem;
} zmk_studio_Request;

typedef struct _zmk_studio_RequestResponse {
    uint32_t request_id;
    pb_size_t which_subsystem;
    union {
        zmk_meta_Response meta;
        zmk_core_Response core;
        zmk_behaviors_Response behaviors;
        zmk_keymap_Response keymap;
    } subsystem;
} zmk_studio_RequestResponse;

typedef struct _zmk_studio_Notification {
    pb_size_t which_subsystem;
    union {
        zmk_core_Notification core;
        zmk_keymap_Notification keymap;
    } subsystem;
} zmk_studio_Notification;

typedef struct _zmk_studio_Response {
    pb_size_t which_type;
    union {
        zmk_studio_RequestResponse request_response;
        zmk_studio_Notification notification;
    } type;
} zmk_studio_Response;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define zmk_studio_Request_init_default          {0, 0, {zmk_core_Request_init_default}}
#define zmk_studio_Response_init_default         {0, {zmk_studio_RequestResponse_init_default}}
#define zmk_studio_RequestResponse_init_default  {0, 0, {zmk_meta_Response_init_default}}
#define zmk_studio_Notification_init_default     {0, {zmk_core_Notification_init_default}}
#define zmk_studio_Request_init_zero             {0, 0, {zmk_core_Request_init_zero}}
#define zmk_studio_Response_init_zero            {0, {zmk_studio_RequestResponse_init_zero}}
#define zmk_studio_RequestResponse_init_zero     {0, 0, {zmk_meta_Response_init_zero}}
#define zmk_studio_Notification_init_zero        {0, {zmk_core_Notification_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define zmk_studio_Request_request_id_tag        1
#define zmk_studio_Request_core_tag              3
#define zmk_studio_Request_behaviors_tag         4
#define zmk_studio_Request_keymap_tag            5
#define zmk_studio_RequestResponse_request_id_tag 1
#define zmk_studio_RequestResponse_meta_tag      2
#define zmk_studio_RequestResponse_core_tag      3
#define zmk_studio_RequestResponse_behaviors_tag 4
#define zmk_studio_RequestResponse_keymap_tag    5
#define zmk_studio_Notification_core_tag         2
#define zmk_studio_Notification_keymap_tag       5
#define zmk_studio_Response_request_response_tag 1
#define zmk_studio_Response_notification_tag     2

/* Struct field encoding specification for nanopb */
#define zmk_studio_Request_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,core,subsystem.core),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,behaviors,subsystem.behaviors),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,keymap,subsystem.keymap),   5)
#define zmk_studio_Request_CALLBACK NULL
#define zmk_studio_Request_DEFAULT NULL
#define zmk_studio_Request_subsystem_core_MSGTYPE zmk_core_Request
#define zmk_studio_Request_subsystem_behaviors_MSGTYPE zmk_behaviors_Request
#define zmk_studio_Request_subsystem_keymap_MSGTYPE zmk_keymap_Request

#define zmk_studio_Response_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,request_response,type.request_response),   1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (type,notification,type.notification),   2)
#define zmk_studio_Response_CALLBACK NULL
#define zmk_studio_Response_DEFAULT NULL
#define zmk_studio_Response_type_request_response_MSGTYPE zmk_studio_RequestResponse
#define zmk_studio_Response_type_notification_MSGTYPE zmk_studio_Notification

#define zmk_studio_RequestResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   request_id,        1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,meta,subsystem.meta),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,core,subsystem.core),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,behaviors,subsystem.behaviors),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,keymap,subsystem.keymap),   5)
#define zmk_studio_RequestResponse_CALLBACK NULL
#define zmk_studio_RequestResponse_DEFAULT NULL
#define zmk_studio_RequestResponse_subsystem_meta_MSGTYPE zmk_meta_Response
#define zmk_studio_RequestResponse_subsystem_core_MSGTYPE zmk_core_Response
#define zmk_studio_RequestResponse_subsystem_behaviors_MSGTYPE zmk_behaviors_Response
#define zmk_studio_RequestResponse_subsystem_keymap_MSGTYPE zmk_keymap_Response

#define zmk_studio_Notification_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,core,subsystem.core),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (subsystem,keymap,subsystem.keymap),   5)
#define zmk_studio_Notification_CALLBACK NULL
#define zmk_studio_Notification_DEFAULT NULL
#define zmk_studio_Notification_subsystem_core_MSGTYPE zmk_core_Notification
#define zmk_studio_Notification_subsystem_keymap_MSGTYPE zmk_keymap_Notification

extern const pb_msgdesc_t zmk_studio_Request_msg;
extern const pb_msgdesc_t zmk_studio_Response_msg;
extern const pb_msgdesc_t zmk_studio_RequestResponse_msg;
extern const pb_msgdesc_t zmk_studio_Notification_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define zmk_studio_Request_fields &zmk_studio_Request_msg
#define zmk_studio_Response_fields &zmk_studio_Response_msg
#define zmk_studio_RequestResponse_fields &zmk_studio_RequestResponse_msg
#define zmk_studio_Notification_fields &zmk_studio_Notification_msg

/* Maximum encoded size of messages (where known) */
#if defined(zmk_core_Response_size) && defined(zmk_behaviors_Response_size) && defined(zmk_keymap_Response_size)
union zmk_studio_Response_type_size_union {char f1[(12 + sizeof(union zmk_studio_RequestResponse_subsystem_size_union))]; char f0[6];};
#endif
#if defined(zmk_core_Response_size) && defined(zmk_behaviors_Response_size) && defined(zmk_keymap_Response_size)
union zmk_studio_RequestResponse_subsystem_size_union {char f3[(6 + zmk_core_Response_size)]; char f4[(6 + zmk_behaviors_Response_size)]; char f5[(6 + zmk_keymap_Response_size)]; char f0[4];};
#endif
#define ZMK_STUDIO_PROTO_ZMK_STUDIO_PB_H_MAX_SIZE zmk_studio_Request_size
#define zmk_studio_Notification_size             4
#define zmk_studio_Request_size                  47
#if defined(zmk_core_Response_size) && defined(zmk_behaviors_Response_size) && defined(zmk_keymap_Response_size)
#define zmk_studio_RequestResponse_size          (6 + sizeof(union zmk_studio_RequestResponse_subsystem_size_union))
#define zmk_studio_Response_size                 (0 + sizeof(union zmk_studio_Response_type_size_union))
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
